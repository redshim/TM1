na.locf(res[,1])
na.locf(res[,2])
na.locf(res[,3])
na.locf(res[,4])
na.locf(res[,2])
length(res)
az <- zoo(1:6)
az
bz <- zoo(c(2,NA,1,4,5,2))
bz
na.locf(bz)
na.locf(bz, fromLast = TRUE)
cz <- zoo(c(NA,9,3,2,3,2))
na.locf(cz)
bz <- zoo(c(2,NA,NA,4,5,2))
bz
na.locf(bz)
data <- read.csv('iris.csv',header=T)
data
kmeans.group <- kmeans(data, group.n)
group.n = 3
kmeans.group <- kmeans(data, group.n)
kmeans(data, group.n)
kmeans(data[1:4], group.n)
data[1:4]
kmeans.group <- kmeans(data[1:4], group.n)
kmeans.result <- data.frame(data, cluster=kmeans.group$cluster)
View(kmeans.result)
plot(kmeans.result)
library(cluster)
library(HSAUR)
install.packages("HSAUR")
plotcluster(data[1:4], kmenas_result$cluster)
library(cluster)
library(fpc)
plotcluster(data[1:4], kmenas_result$cluster)
plotcluster(data[1:4], kmeans.result$cluster)
clusplot(data[1:4], kmeans.result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
setwd("c://R/ksw")
a <- read.csv('DO010414_2.csv',header=T)
length(a)
View(a)
nrow(a)
a[1,]
a[1,2]
for(1:nrow(a)){
if (a[1,2] > 10 & a[1,2] < 60) { t=c('60')}
}
for(1:nrow(a)){
if (a[1,2] > 10 & a[1,2] < 60)
t=c('60')
}
i = 1
a[1,2]
for(i in 1:nrow(a))
if (a[i,2] > 10 & a[1,2] < 60) {t=c('60')}
t
a$count <- 1
View(a)
View(a)
View(a)
table(cut(a, breaks=seq(0,1, by=10))
table(cut(a, breaks=seq(0,1, by=10)))
table(cut(a, breaks=seq(0,1, by=10)))
table(cut(a$alt_curr, breaks=seq(0,1, by=10)))
table(cut(a$alt_curr, breaks=seq(0,nrow(a), by=10)))
y <- stats::rnorm(100)
y
table(cut(y, breaks = pi/3*(-3:3)))
table(cut(y, breaks = pi/3*(-3:3), dig.lab = 4))
cut(rep(1,5), 4) #-- dummy
tx0 <- c(9, 4, 6, 5, 3, 10, 5, 3, 5)
tx0
x <- rep(0:8, tx0)
x
library(dplyr)
for(i in 1:100){
for(i in 1:100){
for(i in 1:100){
j = 5*i
count.j <- a %>% filter(alt_curr > 10) %>% nrow()
print(count.j)
}
}
}
for(i in 1:100){
j = 5*i
count.j <- a %>% filter(alt_curr > 10) %>% nrow()
print(count.j)
}
for(i in 1:100){
j = 5*i
count.j <- a %>% filter(alt_curr < 10) %>% nrow()
print(count.j)
}
for(i in 1:100){
j = 5*i
count.j <- a %>% filter(alt_curr < j) %>% nrow()
print(count.j)
}
for(i in 1:100){
j = 5*i
count.j <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
print(count.j)
}
inspect(count.j)
attribute(count.j)
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
count.j <- c(count.j,count.t)
print(count.j)
}
count.j = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
count.j <- c(count.j,count.t)
print(count.j)
}
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
#count.j <- c(count.j,count.t)
print(count.j)
}
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
#count.j <- c(count.j,count.t)
print(count.j)
}
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
#count.j <- c(count.j,count.t)
print(count.t)
}
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
as.vector(count.t)
#count.j <- c(count.j,count.t)
print(count.t)
}
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
as.vector(count.t)
#count.j <- c(count.j,count.t)
print(count.t)
}
View(count.t)
original.locale = Sys.getlocale('LC_CTYPE')
Sys.getlocale('LC_CTYPE')
count.j = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
count.t <- as.vector(count.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
}
View(count.j)
attributes(count.j)
type(count.j)
count.j <- as.matrix(count.j)
View(count.j)
count.j = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range = j + "to" + j-5
print(range)
count.t <- as.vector(count.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
}
count.j = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range_t = j
print(range)
count.t <- as.vector(count.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j = 0
range.t = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range_t = j
print(range)
count.t <- as.vector(count.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
res <- merge(count.j,range)
range
count.j
count.j = 0
range.t = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range_t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j
range.t
count.j = 0
range.t = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j
range.t
count.j = 0
range.t = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
#count.j <- c(count.j,count.t)
print(count.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j
range.t
print(range.t)
count.j = 0
range.t = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
#count.j <- c(count.j,count.t)
print(count.t)
print(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j = 0
range = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
#count.j <- c(count.j,count.t)
print(count.t)
print(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
range.t
count.j = 0
range = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
#count.j <- c(count.j,count.t)
print(count.t)
print(range.t)
count.j = c(count.j, count.t,range.t)
range = c(range, range.t)
}
count.j
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j
range.t
count.j = 0
range = 0
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j
range.t
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
print(range.t)
}
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
print(range)
}
range
count.j = 0
range = 0
count.j = 0
range = 0
#구간탐색
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
count.j
nrow(count.j)
nrows(count.j)
length(count.j)
length(range)
res <- merge(count.j,range)
res
res <- as.matrix(res)
View(res)
count.j = 0
range = 0
#구간탐색
i = 0
for(i in 1:100){
j = 5*i
count.t <- a %>% filter(alt_curr < j & alt_curr >= j-5) %>% nrow()
range.t = j
count.t <- as.vector(count.t)
range.t <- as.vector(range.t)
count.j = c(count.j, count.t)
range = c(range, range.t)
}
res <- cbind(range,count.j)
View(res)
for(i in 1:100)
{ j = i*5
j = c(j,i)
}
j
i=0
for(i in 1:100)
{ j = i*5
j = c(j,i)
}
j
j=0
i=0
for(i in 1:100)
{   j = i*5
j = c(j,i)
}
j
j=0
i=0
for(i in 1:25)
{   j = 5*i
j = c(j,i)
}
j
j=0
i=0
for(i in 1:25)
{   jt = 5*i
j = c(j,jt)
}
jt
j
cut(a$alt_curr, breaks = j), include.lowest = TRUE, right = FALSE,  labels = j)
cut(a$alt_curr, breaks = j, include.lowest = TRUE, right = FALSE,  labels = j)
nrow(a$alt_curr)
length(a$alt_curr)
length(j)
cut(a$alt_curr, breaks = j  labels = j)
cut(a$alt_curr, breaks = j,  labels = j)
cut(a$alt_curr, breaks = j)
a$cut <- cut(a$alt_curr, breaks = j)
View(a)
aggregate(a$count, by=list(a$cut), FUN=sum)
j
hist(a$alt_curr,
main="alt_curr",
xlab="Passengers",
border="blue",
col="green",
xlim=c(0,150),
las=1,
breaks=5)
hist(a$alt_curr,
main="alt_curr",
xlab="Passengers",
border="blue",
col="green",
xlim=c(0,150),
las=1,
breaks=40)
hist(a$alt_curr,
main="alt_curr",
xlab="bin",
border="black",
col="blue",
xlim=c(0,150),
las=1,
breaks=40)
hist(a$alt_curr,
main="alt_curr",
xlab="bin",
border="black",
col="blue",
xlim=c(0,150),
las=1,
breaks=40, labels = TRUE)
a1 <- array(1:24, c(2,3,4))
view(a1)
View(a1)
a1
j
a$cut <- cut(a$alt_curr, breaks = j)
a$cut
View(a)
a.disp <- aggregate(a$count, by=list(a$cut), FUN=sum)
a.disp
summary(a$cut)
a.summury <- summary(a$cut)
as.data.frame(a.summary)
typeof(a.summury )
a.disp
a.disp$type <- "10000KM"
a.disp
View(a)
View(a.disp)
percentile(a.disp$type)
quantile(a.disp$x, c(.32, .57, .98))
quantile(a.disp$x, c(.32, .57, .95))
Sys.setlocale(category = "LC_ALL", locale = "German")
setwd("C://R/chinese")
dat = read.csv('data_german.csv', header=T, fileEncoding = 'utf8', stringsAsFactors = F)
dat$Text[1]
# coreNLP
Sys.setenv(JAVA_HOME="")  # 충돌 방지
library(coreNLP)
downloadCoreNLP()
install.packages("coreNLP")
library(coreNLP)
downloadCoreNLP()
downloadCoreNLP(type='german')
